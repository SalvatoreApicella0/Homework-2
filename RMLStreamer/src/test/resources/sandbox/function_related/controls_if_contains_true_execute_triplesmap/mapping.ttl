# Generate [TODO] using grel:controls_if and grel:string_contains

@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix ex: <http://example.com/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix rml: <http://semweb.mmlab.be/ns/rml#> .
@prefix ql: <http://semweb.mmlab.be/ns/ql#> .
@prefix fnml:   <http://semweb.mmlab.be/ns/fnml#> .
@prefix fno: 	<https://w3id.org/function/ontology#> .
@prefix idlab-fn: <http://example.com/idlab/function/> .
@prefix grel: 	<http://users.ugent.be/~bjdmeest/function/grel.ttl#> .

@base <http://example.com/base/> .

<TriplesMap1>
  a rr:TriplesMap;

  rml:logicalSource [
                      rml:source "../student.csv";
                      rml:referenceFormulation ql:CSV
                    ];

  rr:subjectMap [
                  rr:template "http://example.com/{Name}"
                ];

  rr:predicateObjectMap [
                          rr:predicate ex:contains_us;
                          rr:objectMap [
                                         fnml:functionValue [
                                                              rr:predicateObjectMap [
                                                                                      rr:predicate fno:executes ;
                                                                                      rr:objectMap [ rr:constant grel:controls_if ] ] ;

                                                              rr:predicateObjectMap [
                                                                                      rr:predicate grel:bool_b ;
                                                                                      rr:objectMap  <ContainsMap>

                                                                                    ];

                                                              rr:predicateObjectMap [
                                                                                      rr:predicate grel:any_true ;
                                                                                      rr:objectMap <POM1>
                                                                                        
                                                                                    
                                                              ];

                                                              rr:predicateObjectMap [
                                                                                      rr:predicate grel:any_false ;
                                                                                      rr:objectMap [ 
                                                                                        rr:template "{Name} does NOT contain us" ; 
                                                                                        rr:termType rr:Literal;
                                                                                      ] 
                                                                                    ]

                                                            ] ;


                                       ] ;

                        ].
<ContainsMap>
fnml:functionValue [
        rr:predicateObjectMap [
          rr:predicate fno:executes ;
          rr:objectMap [ rr:constant grel:string_contains ] ] ;

        rr:predicateObjectMap [
          rr:predicate grel:valueParameter ;
          rr:objectMap [ rml:reference "Name" ] ];

        rr:predicateObjectMap [
          rr:predicate grel:string_sub ;
          rr:objectMap [ rr:constant "us" ] ]

      ] .




<POM1>
rr:predicateObjectMap [
    rr:predicate ex:testje;
    rr:object "TRUEMAP";
  ].